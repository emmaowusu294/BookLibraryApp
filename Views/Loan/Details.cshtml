@model BookLibraryApp.Models.ViewModels.LoanViewModel

@{
    ViewData["Title"] = "Loan Details";
}

<h1>Loan Details</h1>

<div>
    <h4>Loan Transaction #@Model.LoanId</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.BookTitle)</dt>
        <dd class="col-sm-9">@Html.DisplayFor(model => model.BookTitle)</dd>

        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.PatronFullName)</dt>
        <dd class="col-sm-9">@Html.DisplayFor(model => model.PatronFullName)</dd>

        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.CheckoutDate)</dt>
        <dd class="col-sm-9">@Html.DisplayFor(model => model.CheckoutDate)</dd>

        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.DueDate)</dt>
        <dd class="col-sm-9">@Html.DisplayFor(model => model.DueDate)</dd>

        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.ReturnDate)</dt>
        <dd class="col-sm-9">
            @if (Model.ReturnDate.HasValue)
            {
                @Html.DisplayFor(model => model.ReturnDate)
            }
            else
            {
                <span class="text-danger">NOT YET RETURNED</span>
            }
        </dd>

        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Status)</dt>
        <dd class="col-sm-9">
            <span class="badge @(Model.Status == "OVERDUE" ? "bg-danger" : Model.Status == "Returned" ? "bg-success" : "bg-primary")">
                @Html.DisplayFor(model => model.Status)
            </span>
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Index">Back to Loan History</a>
</div>